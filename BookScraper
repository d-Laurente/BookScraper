#!/opt/homebrew/bin/python3

from bs4 import BeautifulSoup
from urllib.request import urlopen
import requests
import re
import json
import xlrd
import csv

from xlrd import book

def getFromBooksAPI(isbn):
    print("Getting details from Google Books ...")
    descString = f""
    apiLink = f"https://www.googleapis.com/books/v1/volumes?q=isbn:{isbn}&key=AIzaSyDkC7Sa8yq_CsjE29qJKl4o96pmSOUEgJc"

    # send a request and get a JSON response
    resp = urlopen(apiLink)
    # parse JSON into Python as a dictionary
    book_data = json.load(resp)
    
    # Obtaining data
    if book_data["totalItems"] > 0:
        bookSpecs = book_data["items"][0]["volumeInfo"]
        publisher = bookSpecs["publisher"] if ("publisher" in bookSpecs) else ""
        pubYear = bookSpecs["publishedDate"].split('-')[0]
        # dim = scrapeDimensions(isbn)
        # descString = f'{isbn}: {bookSpecs["title"]} {bookSpecs["description"]} {bookSpecs["pageCount"]} pages, {dim}, {publisher}, {pubYear}'
        descString = f'{isbn}: {bookSpecs["title"]} {bookSpecs["description"]} {bookSpecs["pageCount"]} pages, {publisher}, {pubYear}'
        print(descString)
    else:
        print("No records of this book in API's database. Please do manually!")
    print("----------------------------")

# deploys a semi-webscraper to obtain dimenstions for specified isbn
# returns a string of the dimensions
def scrapeDimensions(isbn) -> str:
    i = 0
    dimString = f""
    link = f"https://www.amazon.com.au/s?k={isbn}"
    htmlPage = requests.get(link, headers={"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36"})
    soup = BeautifulSoup(htmlPage.content, "html.parser")

    for link in soup.find_all("a", {"class": "a-link-normal s-no-outline"}):
        if i >= 1:
            break

        sublink = link.get("href")
        infoLink = f"https://www.amazon.com.au{sublink}"

        # getting the dimensions from amazon
        infoHtml = requests.get(infoLink, headers={"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36"})
        infoSoup = BeautifulSoup(infoHtml.content, "html.parser")
        bookInfo = infoSoup.find("ul", {"class": "a-unordered-list a-nostyle a-vertical a-spacing-none detail-bullet-list"})
        descItems = bookInfo.findChildren("li", recursive=False)
        
        for child in descItems:
            if "Dimensions" in child.text:

                dimstr = child.text.replace('\n', '')
                tok = dimstr.split(':')[1]
                # dim = re.split('x ', tok)
                dim = tok.split(' ')
                thickFlag = 0
                dimensions = ""

                for d in dim:
                    if re.match(r'^-?\d+(?:\.\d+)$', d) is None:
                        # print("not float")
                        continue
                    elif thickFlag == 1:
                        # print("ignoring thickness")
                        thickFlag += 1
                    else:
                        # print(d)
                        thickFlag += 1
                        size = int(float(d) * 10)
                        dimensions += str(size) + "*"
                        # print(dimensions)

                # fixing dimensions string
                dimensions = dimensions[:-1]
                dimensions = dimensions.replace('*', " x ")
                dimString = f"{dimensions}mm, {dimString}"

            # Checks for type of book
            # if "back" in child.text or "cover" in child.text:
            if ("back" in child.text) or ("cover" in child.text):
                type = child.text.replace('\n', '')
                type = type.split(':')[0]
                print(type)
                dimString = f"{type}"

        i += 1

    if dimString == "":
        dimString = "find manually"
        
    return dimString

def main():
    print("hello, started webscraper...")
    excelLoc = "test.xls"
    wb = xlrd.open_workbook(excelLoc)
    sheet = wb.sheet_by_index(0)
    i = 0
    
    for i in range(1, sheet.nrows):
        isbn = sheet.cell_value(i, 0)
        title = sheet.cell_value(i, 1)
        # print(f"{isbn}: {title}")
        getFromBooksAPI(isbn)


if __name__ == "__main__":
    main()
